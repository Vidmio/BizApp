// <auto-generated />
using System;
using BizApp.Components.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BizApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407105147_LagerUnique")]
    partial class LagerUnique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BizApp.Components.Model.Error", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Errors", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Faktura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KlijentID");

                    b.ToTable("Fakture", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.GrupaProizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sortiranje")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GrupaProizvoda", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Klijent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaticniBR")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PIB")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Telefon1")
                        .HasColumnType("int");

                    b.Property<int?>("Telefon2")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Klijenti", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Lager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProizvodID")
                        .IsUnique();

                    b.ToTable("Lageri", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GrupaProizvodID")
                        .HasColumnType("int");

                    b.Property<string>("Jedinica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("JedinicnaCena")
                        .HasColumnType("int");

                    b.Property<int?>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("GrupaProizvodID");

                    b.ToTable("Proizvodi", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Stavka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("FakturaID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<bool?>("Montirano")
                        .HasColumnType("bit");

                    b.Property<bool?>("Naruceno")
                        .HasColumnType("bit");

                    b.Property<int>("ProizvodID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FakturaID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("Stavke", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Students", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Vozilo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateOnly>("DatumIstekaProtivPozarnogAparata")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DatumIstekaPrvePomoci")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DatumIstekaRegistracije")
                        .HasColumnType("date");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("ProtivProzarniAparat")
                        .HasColumnType("bit");

                    b.Property<bool>("PrvaPomoc")
                        .HasColumnType("bit");

                    b.Property<string>("Registracija")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("ID");

                    b.ToTable("Vozila", "dbo");
                });

            modelBuilder.Entity("BizApp.Components.Model.Faktura", b =>
                {
                    b.HasOne("BizApp.Components.Model.Klijent", "Klijent")
                        .WithMany("Fakture")
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("BizApp.Components.Model.Lager", b =>
                {
                    b.HasOne("BizApp.Components.Model.Proizvod", "Proizvod")
                        .WithMany("Lager")
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("BizApp.Components.Model.Proizvod", b =>
                {
                    b.HasOne("BizApp.Components.Model.GrupaProizvod", "GrupaProizvod")
                        .WithMany("Proizvodi")
                        .HasForeignKey("GrupaProizvodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupaProizvod");
                });

            modelBuilder.Entity("BizApp.Components.Model.Stavka", b =>
                {
                    b.HasOne("BizApp.Components.Model.Faktura", "Faktura")
                        .WithMany("Stavka")
                        .HasForeignKey("FakturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BizApp.Components.Model.Proizvod", "Proizvod")
                        .WithMany("Stavka")
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faktura");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("BizApp.Components.Model.Faktura", b =>
                {
                    b.Navigation("Stavka");
                });

            modelBuilder.Entity("BizApp.Components.Model.GrupaProizvod", b =>
                {
                    b.Navigation("Proizvodi");
                });

            modelBuilder.Entity("BizApp.Components.Model.Klijent", b =>
                {
                    b.Navigation("Fakture");
                });

            modelBuilder.Entity("BizApp.Components.Model.Proizvod", b =>
                {
                    b.Navigation("Lager");

                    b.Navigation("Stavka");
                });
#pragma warning restore 612, 618
        }
    }
}
